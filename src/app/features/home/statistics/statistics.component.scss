@use '../../../styles/variables' as *;
@use '../../../styles/themes' as *;
@use '../../../styles/mixins' as *;

.statistics {
  padding: 4rem 0;
  background-color: var(--background-primary);

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .stats-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 2rem;
    
    @media (max-width: 992px) {
      grid-template-columns: repeat(2, 1fr);
    }
    
    @media (max-width: 576px) {
      grid-template-columns: 1fr;
    }
  }

  .stat-item {
    background: var(--color-gradient);
    padding: 2rem;
    border-radius: $border-radius-sm;
    text-align: center;
    @include theme-transition;
    box-shadow: $shadow-sm;
    opacity: 0;
    transform: translateY(20px);
    animation: fadeInUp 0.6s ease forwards;

    &:hover {
      transform: translateY(-5px);
      box-shadow: $shadow-md;
    }

    .stat-icon {
      font-size: 2.5rem;
      color: var(--text-primary);
      margin-bottom: 1rem;
      @include theme-transition;

      i {
        @include theme-transition;
      }
    }

    &:hover .stat-icon {
      transform: scale(1.1);
    }

    .stat-content {
      h3 {
        font-size: 2rem;
        font-weight: bold;
        color: var(--text-primary);
        margin: 0 0 0.5rem;
        font-family: 'Roboto Mono', monospace;
        @include theme-transition;
      }

      p {
        font-size: 1rem;
        color: var(--text-tertiary);
        margin: 0;
        @include theme-transition;
      }
    }

    &:hover {
      .stat-content {
        h3 {
          color: var(--text-primary);
        }
        p {
          color: var(--text-primary);
        }
      }
    }
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

// Add animation delay for each stat item
.stat-item {
  @for $i from 1 through 4 {
    &:nth-child(#{$i}) {
      animation-delay: #{$i * 0.1}s;
    }
  }
} 